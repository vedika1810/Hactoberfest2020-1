#include<stdio.h>
#include<stdlib.h>
typedef struct node
{
   int data;
   struct node *next;
}stack;
stack *head=NULL;

int push(int);
int pop(int *);
int evalpost(char *);
int calc(int,int,char);
void printerror();

void main()
{
   char poststr[20];
   printf("Enter Postfix string: ");
   scanf("%s",poststr);
   printf("The evaluated value of %s is %d\n",poststr,evalpost(poststr));
}

int push(int val)
{
   stack *top;
   top = (stack*)malloc(sizeof(stack));
   if(top==NULL)
      return -1;
   top->data=val;
   top->next=head;
   head=top;
   return 0;
}
int pop(int *val)
{
   if(head==NULL)
      return -1;
   *val=head->data;
   head=head->next;
   return 0;
}
int calc(int a, int b, char c)
{
   switch(c)
   {
      case '+':   return a+b;
      case '-':   return a-b;
      case '*':   return a*b;
      case '/':   return a/b;
   }
   return 0;
}

int value(char ch)
{
   int val;
   printf("Enter the value of %c: ",ch);
   scanf("%d",&val);
   return val;
}
int evalpost(char *symbol)
{
   int i=0,op1,op2;
   char ch;
   while((ch=symbol[i++])!='\0')
   {
      if(ch==' ')
         continue;
      if(ch>='a'&&ch<='z')
         push(value(ch));
      else if(ch=='+' || ch=='-' || ch=='*' || ch=='/' )
      {
         if(pop(&op2)||pop(&op1))
            printerror();
         push(calc(op1,op2,ch));
      }
   }
   pop(&op1);
   if(!pop(&op2))
      printerror();
   return op1;
}
void printerror()
{
   printf("The given postfix is wrong\n");
   exit(0);
}
